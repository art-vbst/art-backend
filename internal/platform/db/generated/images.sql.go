// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: images.sql

package generated

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createImage = `-- name: CreateImage :one
INSERT INTO images (
        artwork_id,
        image_url,
        image_width,
        image_height
    )
VALUES ($1, $2, $3, $4)
RETURNING id, artwork_id, is_main_image, image_url, image_width, image_height, created_at, updated_at
`

type CreateImageParams struct {
	ArtworkID   pgtype.UUID `db:"artwork_id" json:"artwork_id"`
	ImageUrl    string      `db:"image_url" json:"image_url"`
	ImageWidth  *int32      `db:"image_width" json:"image_width"`
	ImageHeight *int32      `db:"image_height" json:"image_height"`
}

func (q *Queries) CreateImage(ctx context.Context, arg CreateImageParams) (Image, error) {
	row := q.db.QueryRow(ctx, createImage,
		arg.ArtworkID,
		arg.ImageUrl,
		arg.ImageWidth,
		arg.ImageHeight,
	)
	var i Image
	err := row.Scan(
		&i.ID,
		&i.ArtworkID,
		&i.IsMainImage,
		&i.ImageUrl,
		&i.ImageWidth,
		&i.ImageHeight,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
